@using CameraBazaar.Models
@model CameraBazaar.App.Models.BindingModels.AddCameraBindingModel
@{
    ViewBag.Title = "Add";
}

<style>
    #container {
        text-align: center;
    }

    select, input, textarea {
        display: inline !important;
        margin: 0 0 5px 5px;
    }

    label {
        width: 150px;
        text-align: right;
    }

    .normal-lbl {
        width: auto;
    }

    #errors > span {
        display: block;
    }

    #radioBtns {
        text-align: left;
        margin-right: 220px;
    }
</style>

<div id="container">
    <h2>Add Camera</h2>

    @using (Html.BeginForm())
    {
        @Html.LabelFor(vm => vm.Make)
        @Html.DropDownListFor(m => m.Make, Enum.GetNames(typeof(Make)).Select(e => new SelectListItem { Text = e }), "Choose Make...", new { @class = "form-control" })
        @*
            @Html.EnumDropDownListFor(v => v.Make, "Choose Make...", new { @class = "form-control" })
        *@
        <br />
        @Html.LabelFor(vm => vm.Model)
        @Html.TextBoxFor(vm => vm.Model, null, new { @class = "form-control" })
        <br />
        @Html.LabelFor(vm => vm.Price)
        @Html.TextBoxFor(vm => vm.Price, "0.00", new { @class = "form-control", type = "number", step="0.01"})
        <br />
        @Html.LabelFor(vm => vm.Quantity)
        @Html.TextBoxFor(vm => vm.Quantity, null, new { @class = "form-control", type = "number" })
        <br />
        @Html.LabelFor(vm => vm.MinShutterSpeed)
        @Html.TextBoxFor(vm => vm.MinShutterSpeed, null, new { @class = "form-control", type = "number" })
        <br />
        @Html.LabelFor(vm => vm.MaxShutterSpeed)
        @Html.TextBoxFor(vm => vm.MaxShutterSpeed, null, new { @class = "form-control", type = "number" })
        <br />
        @Html.LabelFor(vm => vm.MinISO)
        @Html.TextBoxFor(vm => vm.MinISO, null, new { @class = "form-control", type = "number" })
        <br />
        @Html.LabelFor(vm => vm.MaxISO)
        @Html.TextBoxFor(vm => vm.MaxISO, null, new { @class = "form-control", type = "number" })
        <br />
        @Html.LabelFor(vm => vm.IsFullFrame)
        <span id="radioBtns">
            @Html.RadioButtonFor(vm => vm.IsFullFrame, true)Yes
            @Html.RadioButtonFor(vm => vm.IsFullFrame, false)No
        </span>
        <br />
        @Html.LabelFor(vm => vm.VideoResolution)
        @Html.TextBoxFor(vm => vm.VideoResolution, null, new { @class = "form-control" })
        <br />
        @Html.LabelFor(vm => vm.LightMeterings)

        <input type="checkbox" id="lightMeterings1" name="lightMeterings", value="1" />
        <label for="lightMeterings1" class="normal-lbl">Spot</label>
        <input type="checkbox" id="lightMeterings2" name="lightMeterings" , value="2" />
        <label for="lightMeterings2" class="normal-lbl">Center-Weighted</label>
        <input type="checkbox" id="lightMeterings3" name="lightMeterings" , value="3" />
        <label for="lightMeterings3" class="normal-lbl">Evaluative</label>

        <br/>
        @Html.LabelFor(vm => vm.Description, null, new { style = "vertical-align: top"})
        @Html.TextAreaFor(vm => vm.Description, new { @class="form-control", rows="5"})
        <br/>
        @Html.LabelFor(vm => vm.ImageUrl)
        @Html.TextBoxFor(vm => vm.ImageUrl, null, new { @class ="form-control"} )
        <br/>

        <input type="submit" value="Add" class="btn btn-success"/>
        @Html.ActionLink("Back", "Index", "Cameras", null, new { @class="btn btn-danger"})
        <div id="errors">
            @Html.ValidationMessageFor(vm => vm.Make, null, new { @class = "text-danger" })
            @Html.ValidationMessageFor(vm => vm.Model, null, new { @class = "text-danger" })
            @Html.ValidationMessageFor(vm => vm.Price, null, new { @class = "text-danger" })
            @Html.ValidationMessageFor(vm => vm.Quantity, null, new { @class = "text-danger" })
            @Html.ValidationMessageFor(vm => vm.MinShutterSpeed, null, new { @class = "text-danger" })
            @Html.ValidationMessageFor(vm => vm.MaxShutterSpeed, null, new { @class = "text-danger" })
            @Html.ValidationMessageFor(vm => vm.MinISO, null, new { @class = "text-danger" })
            @Html.ValidationMessageFor(vm => vm.MaxISO, null, new { @class = "text-danger" })
            @Html.ValidationMessageFor(vm => vm.VideoResolution, null, new { @class = "text-danger" })
            @Html.ValidationMessageFor(vm => vm.Description, null, new { @class = "text-danger" })
            @Html.ValidationMessageFor(vm => vm.ImageUrl, null, new { @class = "text-danger" })
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}